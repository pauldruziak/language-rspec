'name': 'RSpec'
'fileTypes': [
  'spec.rb'
]
'scopeName': 'source.ruby.rspec'
'patterns': [
  {
    'include': '#behaviour'
  }
  {
    'match': '(?<!\\.)\\bRSpec\\b'
    'name': 'support.class.rspec'
  }
  {
    'match': '(?<!\\.)\\b(example|fcontext|fdescribe|fexample|fit|focus|fspecify|Given|given!|include_context|include_examples|Invariant|it|it_behaves_like|it_should_behave_like|its|let|let!|pending|scenario|shared_examples|shared_examples_for|skip|specify|subject|xit|Then|When)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '(?<!\\.)\\b(after|after_suite_parts|append_after|append_before|around|before|before_suite_parts|prepend_after|prepend_before)\\b'
    'name': 'keyword.other.hook.rspec'
  }
  {
    'match': '(?<!\\.)\\b(double|instance_double|instance_spy|mock|spy|stub|stub_chain)\\b'
    'name': 'keyword.other.mock.rspec'
  }
  {
    'match': '\\b(and_call_original|and_raise|and_return|and_throw|and_yield|build_child|called_max_times|expected_args|invoke|matches)\\b'
    'name': 'keyword.other.mock.rspec'
  }
  {
    'match': '(?<!\\.)\\b(should|should_not|should_not_receive|should_receive)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '(?<!\\.)\\b(all|allow|allow_any_instance_of|assigns|be|change|described_class|eq|eql|equal|errors_on|exist|expect|expect_any_instance_of|have|have_at_least|have_at_most|have_exactly|include|is_expected|match|match_array|matcher|raise_error|raise_exception|receive|receive_messages|respond_to|satisfy|throw_symbol|when|wrap_expectation)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '\\b(by|not_to|to|to_not)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '(?<!\\.)\\b(accept_nested_attributes_for|belong_to|custom_validate|embed_many|embed_one|validate_associated|validate_exclusion_of|validate_format_of|validate_inclusion_of|validate_length_of)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '(?<!\\.)\\b(allow_mass_assignment_of|allow_value|ensure_exclusion_of|ensure_length_of|have_secure_password|validate_absence_of|validate_acceptance_of|validate_confirmation_of|validate_numericality_of|validate_presence_of|validate_uniqueness_of)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '\\b(advise|any_args|any_number_of_times|anything|at_least|at_most|exactly|expected_messages_received|generate_error|hash_including|hash_not_including|ignoring_args|instance_of|matches_at_least_count|matches_at_most_count|matches_exact_count|matches_name_but_not_args|negative_expectation_for|never|no_args|once|ordered|similar_messages|times|twice|verify_messages_received|with)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '(?<!\\.)\\b(be|have)_\\w+\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'include': 'source.ruby'
  }
]
'repository':
  'behaviour':
    'begin': '^(RSpec)?(?:\\.|\\s*)(describe|context|feature)\\b'
    'beginCaptures':
      '1':
        'name': 'support.class.ruby'
      '2':
        'name': 'keyword.other.behaviour.rspec'
    'end': '\\b(do)\\s*$'
    'endCaptures':
      '1':
        'name': 'keyword.control.ruby.start-block'
    'name': 'meta.rspec.behaviour'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.ruby'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.ruby'
        'name': 'string.quoted.double.interpolated.ruby'
      }
      {
        'begin': "'"
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.ruby'
        'end': "'"
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.ruby'
        'name': 'string.quoted.single.ruby'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.constant.ruby'
        'comment': 'symbols'
        'match': '(?<!:)(:)(?>[$a-zA-Z_]\\w*(?>[?!]|=(?![>=]))?|===?|<=>|>[>=]?|<[<=]?|[%&`/\\|]|\\*\\*?|=?~|[-+]@?|\\[\\]=?|@@?[a-zA-Z_]\\w*)'
        'name': 'constant.other.symbol.ruby'
      }
      {
        'begin': '(,)'
        'beginCaptures':
          '1':
            'name': 'punctuation.separator.object.ruby'
        'end': '\\s(?=do)'
        'patterns': [
          {
            'include': 'source.ruby'
          }
        ]
      }
    ]
