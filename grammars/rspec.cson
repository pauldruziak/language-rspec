'name': 'RSpec'
'fileTypes': [
  'spec.rb'
]
'scopeName': 'source.ruby.rspec'
'patterns': [
  {
    'include': '#behaviour'
  }
  {
    'match': '(?<!\\.)\\b(it|specify|example|scenario|pending|skip|xit|fit|xspecify|xexample|expect)(?!\\s=|=)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '\\b(should_not|should)\\b'
    'name': 'keyword.other.example.rspec'
  }
  {
    'match': '(?<!\\.)\\b(before|after|around)\\b(?![?!])'
    'name': 'keyword.other.hook.rspec'
  }
  {
    'match': '\\b(eq|equal)\\b'
    'name': 'keyword.other.matcher.rspec'
  }
  {
    'include': 'source.ruby'
  }
]
'repository':
  'behaviour':
    'begin': '^(RSpec)?(?:\\.|\\s*)(describe|context|fdescribe|fcontext|xdescribe|xcontext|feature)(?! =|=)\\b'
    'beginCaptures':
      '1':
        'name': 'support.class.ruby'
      '2':
        'name': 'keyword.other.rspec.behaviour'
    'end': '\\b(do)\\s*$'
    'endCaptures':
      '1':
        'name': 'keyword.control.ruby.start-block'
    'name': 'meta.rspec.behaviour'
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.ruby'
        'comment': 'string literal with interpolation and "" delimitor'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.ruby'
        'name': 'string.quoted.double.interpolated.ruby'
        'patterns': [
          {
            'include': '#interpolated_ruby'
          }
          {
            'include': '#escaped_char'
          }
        ]
      }
      {
        'begin': "'"
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.ruby'
        'comment': "string literal with '' delimitor"
        'end': "'"
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.ruby'
        'name': 'string.quoted.single.ruby'
        'patterns': [
          {
            'match': '\\\\\'|\\\\\\\\'
            'name': 'constant.character.escape.ruby'
          }
        ]
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.constant.ruby'
        'comment': 'symbols'
        'match': '(?<!:)(:)(?>[$a-zA-Z_]\\w*(?>[?!]|=(?![>=]))?|===?|<=>|>[>=]?|<[<=]?|[%&`/\\|]|\\*\\*?|=?~|[-+]@?|\\[\\]=?|@@?[a-zA-Z_]\\w*)'
        'name': 'constant.other.symbol.ruby'
      }
      {
        'begin': '(,)'
        'beginCaptures':
          '1':
            'name': 'punctuation.separator.object.ruby'
        'end': '\\s(?=do)'
        'patterns': [
          {
            'include': 'source.ruby'
          }
        ]
      }
    ]
  'escaped_char':
    'match': '\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)'
    'name': 'constant.character.escape.ruby'
  'interpolated_ruby':
    'patterns': [
      {
        'begin': '#{'
        'beginCaptures':
          '0':
            'name': 'punctuation.section.embedded.begin.ruby'
        'contentName': 'source.ruby'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'punctuation.section.embedded.end.ruby'
        'name': 'meta.embedded.line.ruby'
        'patterns': [
          {
            'include': '#nest_curly_and_self'
          }
          {
            'include': '$self'
          }
        ]
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.ruby'
        'match': '(#@)[a-zA-Z_]\\w*'
        'name': 'variable.other.readwrite.instance.ruby'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.ruby'
        'match': '(#@@)[a-zA-Z_]\\w*'
        'name': 'variable.other.readwrite.class.ruby'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.ruby'
        'match': '(#\\$)[a-zA-Z_]\\w*'
        'name': 'variable.other.readwrite.global.ruby'
      }
    ]
